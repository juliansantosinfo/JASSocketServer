/* 
 * Copyright (C) 2018 Julian A. Santos
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.github.juliansantosinfo.jassocketserver.ui;

import com.github.juliansantosinfo.jassocketserver.client.Client;
import com.github.juliansantosinfo.jassocketserver.message.Message;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JTextArea;

/**
 *
 * @author Julian A. Santos
 */
public class ClientUI extends javax.swing.JFrame implements Runnable {

    private Message message;
    private String messageOutput;

    private Client client;

    /**
     * Creates new form Cliente
     */
    public ClientUI() {

        client = new Client(this);

        initComponents();

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                Thread.currentThread().interrupt();
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaOutput = new javax.swing.JTextArea();
        jBtnSend = new javax.swing.JButton();
        textFieldIP = new javax.swing.JTextField();
        textFieldPort = new javax.swing.JTextField();
        jBtnConnect = new javax.swing.JButton();
        labelIP = new javax.swing.JLabel();
        labelPort = new javax.swing.JLabel();
        jBtnDisconnect = new javax.swing.JButton();
        jBtnExit = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textFieldInput = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        textAreaOutput.setColumns(20);
        textAreaOutput.setRows(5);
        jScrollPane1.setViewportView(textAreaOutput);

        jBtnSend.setText("SEND");
        jBtnSend.setEnabled(false);
        jBtnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSendActionPerformed(evt);
            }
        });

        textFieldIP.setText("127.0.0.1");

        textFieldPort.setText("27000");

        jBtnConnect.setText("Connect");
        jBtnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnConnectActionPerformed(evt);
            }
        });

        labelIP.setText("IP");

        labelPort.setText("Port");

        jBtnDisconnect.setText("Disconnect");
        jBtnDisconnect.setEnabled(false);
        jBtnDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDisconnectActionPerformed(evt);
            }
        });

        jBtnExit.setText("Exit");
        jBtnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnExitActionPerformed(evt);
            }
        });

        textFieldInput.setColumns(20);
        textFieldInput.setRows(5);
        jScrollPane2.setViewportView(textFieldInput);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelIP)
                                .addGap(175, 175, 175))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(textFieldIP, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelPort)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtnConnect)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtnDisconnect)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtnExit, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnSend)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelIP)
                    .addComponent(labelPort))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnConnect)
                    .addComponent(jBtnDisconnect)
                    .addComponent(jBtnExit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jBtnSend, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //--------------------------------------------------------------------------
    // METHODS ACTION PERFORMED
    //--------------------------------------------------------------------------
    /**
     * Set action to connect button.
     *
     * @param evt
     */
    private void jBtnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnConnectActionPerformed
        client.connect(textFieldIP.getText(), Integer.parseInt(textFieldPort.getText()));
    }//GEN-LAST:event_jBtnConnectActionPerformed

    /**
     * Set action to send button.
     *
     * @param evt
     */
    private void jBtnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSendActionPerformed
        client.sendToServer(textFieldInput.getText());
    }//GEN-LAST:event_jBtnSendActionPerformed

    /**
     * Set action to disconect button.
     *
     * @param evt
     */
    private void jBtnDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDisconnectActionPerformed
        client.disconnect();
    }//GEN-LAST:event_jBtnDisconnectActionPerformed

    /**
     * Set action to exit button.
     *
     * @param evt
     */
    private void jBtnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnExitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtnExitActionPerformed

    //--------------------------------------------------------------------------
    // METHODS GET AND SET
    //--------------------------------------------------------------------------
    /**
     * Returns the component of the text area.
     *
     * @return
     */
    public JTextArea getjTextArea() {
        return textAreaOutput;
    }

    /**
     * Set the component of the text area.
     *
     * @param jTextArea
     */
    public void setjTextArea(JTextArea jTextArea) {
        this.textAreaOutput = jTextArea;
    }

    //--------------------------------------------------------------------------
    // SWING VARIABLES ADDED BY NETBEANS
    //--------------------------------------------------------------------------

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnConnect;
    private javax.swing.JButton jBtnDisconnect;
    private javax.swing.JButton jBtnExit;
    private javax.swing.JButton jBtnSend;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelIP;
    private javax.swing.JLabel labelPort;
    private javax.swing.JTextArea textAreaOutput;
    private javax.swing.JTextField textFieldIP;
    private javax.swing.JTextArea textFieldInput;
    private javax.swing.JTextField textFieldPort;
    // End of variables declaration//GEN-END:variables

    //--------------------------------------------------------------------------
    // METHODS
    //--------------------------------------------------------------------------
    @Override
    public void run() {
        setVisible(true);
    }

    /**
     * Defines window behavior when connected to the server.
     */
    public void formConnected() {
        textFieldIP.setEditable(false);
        textFieldPort.setEditable(false);
        jBtnConnect.setEnabled(false);
        jBtnDisconnect.setEnabled(true);
        jBtnSend.setEnabled(true);
        textFieldInput.setEditable(true);
        jBtnExit.setEnabled(false);
    }

    /**
     * Defines window behavior when disconnected to the server.
     */
    public void formDisconnected() {
        textFieldIP.setEditable(true);
        textFieldPort.setEditable(true);
        jBtnConnect.setEnabled(true);
        jBtnDisconnect.setEnabled(false);
        jBtnSend.setEnabled(false);
        textFieldInput.setEditable(false);
        jBtnExit.setEnabled(true);
    }
}
